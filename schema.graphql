# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
  query: Query
  mutation: Mutation
}

type AuthPayload {
  token: String!
  user: User!
}

type Contract {
  archived: Boolean!
  end: String!
  groups: [Group!]!
  hexColor: String!
  id: Int!
  name: String!
  skills: [Skill!]!
  start: String!
}

type Group {
  contracts: [Contract!]!
  id: Int!
  name: String!
  students: [Student!]!
}

type Mutation {
  login(password: String!, username: String!): AuthPayload!
}

type Query {
  contract(id: Int!): Contract!
  contracts(groupIds: [Int!]): [Contract!]!
  groups: [Group!]!
  me: User!
  student(ownerUsername: String!): Student!
  students: [Student!]!
  teachers: [Teacher!]!
}

type Skill {
  contract: Contract!
  contractId: Int!
  id: Int!
  name: String!
  studentSkills: [StudentSkill!]!
}

type Student {
  firstName: String!
  groups: [Group!]!
  lastName: String!
  owner: User!
  ownerUsername: String!
  studentSkills: [StudentSkill!]!
}

type StudentSkill {
  mark: Mark!
  skill: Skill!
  skillID: Int!
  student: Student!
  studentID: String!
}

type Teacher {
  firstName: String!
  lastName: String!
  owner: User!
  ownerUsername: String!
}

type User {
  role: Role!
  student: [Student!]!
  teacher: [Teacher!]!
  username: String!
}

enum Mark {
  BAD
  GOOD
  TODO
}

enum Role {
  ADMIN
  STUDENT
  TEACHER
}
